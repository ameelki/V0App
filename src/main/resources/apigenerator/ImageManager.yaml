openapi: 3.0.1
info:
  title: Image Manager Controller
  description: API pour gérer le téléchargement d'images en base64 avec type de l'image
  version: 1.0.0
servers:
  - url: http://localhost:8089
    description: Local server
tags:
  - name: Image Manager
    description: Gestion du téléchargement d'images

paths:
  /image-manager/upload/{imageType}:
    post:
      tags:
        - Image Manager
      summary: Télécharge une image en base64
      description: Reçoit une image encodée en base64 et un nom de fichier, puis enregistre l'image sur le serveur. Le `imageType` indique le type de l'image (PERSON ou ADDS). Si `imageType` est `PERSON`, alors le champ `personId` est requis.
      parameters:
        - name: imageType
          in: path
          required: true
          description: Type de l'image
          schema:
            type: string
            enum: [PERSON, ADDS]
      requestBody:
        description: Contient l'image en base64, le nom du fichier, et potentiellement l'ID de la personne
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: Image encodée en base64
                  example: iVBORw0KGgoAAAANSUhEUgAAA...
                fileName:
                  type: string
                  description: Nom du fichier pour l'enregistrement
                  example: image.png
                personId:
                  type: string
                  description: ID de la personne (requis si `imageType` est `PERSON`)
                addsId:
                  type: integer
                  description: ID de l'ADDS (requis si `imageType` est `ADDS`)
              required:
                - image
                - fileName
      responses:
        '200':
          description: Image enregistrée avec succès
          content:
            application/json:
              schema:
                type: string
                example: "Image enregistrée avec succès"
        '400':
          description: Requête invalide
          content:
            application/json:
              schema:
                type: string
                example: "L'image, le nom du fichier, ou le type d'image est manquant ou invalide"
        '422':
          description: Champ `personId` manquant lorsque `imageType` est `PERSON`
          content:
            application/json:
              schema:
                type: string
                example: "Le champ `personId` est obligatoire lorsque `imageType` est `PERSON`"
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: string
                example: "Erreur lors de l'enregistrement de l'image"

  /image-manager/get-picture/{imageType}:
    get:
      tags:
        - Image Manager
      summary: Récupère une image par ID
      description: Récupère une image en fonction du `imageType` et de l'ID (soit `personId` si `imageType` est `PERSON`, soit `addsId` si `imageType` est `ADDS`).
      parameters:
        - name: imageType
          in: path
          required: true
          description: Type de l'image à récupérer (PERSON ou ADDS)
          schema:
            type: string
            enum: [PERSON, ADDS]
        - name: personId
          in: query
          description: ID de la personne (requis si `imageType` est `PERSON`)
          schema:
            type: string
        - name: addsId
          in: query
          description: ID de l'ADDS (requis si `imageType` est `ADDS`)
          schema:
            type: integer
        - name: Authorization
          in: header
          required: true
          description: Token d'authentification Bearer pour valider l'accès
          schema:
            type: string
            example: "Bearer your_token_here"
      responses:
        '200':
          description: Image récupérée avec succès
          content:
            application/json:
              schema:
                type: object
                properties:
                  image:
                    type: string
                    description: Image encodée en base64
                    example: iVBORw0KGgoAAAANSUhEUgAAA...
                  fileName:
                    type: string
                    description: Nom du fichier de l'image
                    example: image.png
        '400':
          description: Paramètre `personId` ou `addsId` manquant ou invalide
          content:
            application/json:
              schema:
                type: string
                example: "Missing or invalid `personId` or `addsId`"
        '404':
          description: Image non trouvée pour l'ID spécifié
          content:
            application/json:
              schema:
                type: string
                example: "Image not found"
        '500':
          description: Erreur serveur
          content:
            application/json:
              schema:
                type: string
                example: "Error retrieving image"
